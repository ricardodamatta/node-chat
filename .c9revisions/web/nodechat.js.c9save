{"ts":1372699107596,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"(function($) {\n\nvar nodeChat = (window.nodeChat = {\n\tconnect: function(basePath) {\n\t\treturn new Channel(basePath);\n\t}\n});\n\nfunction Channel(basePath) {\n\tthis.basePath = basePath;\n\tbindAll(this);\n}\n\n$.extend(Channel.prototype, {\n\tpollingErrors: 0,\n\tlastMessageId: 0,\n\tid: null,\n\t\n\trequest: function(url, options) {\n\t\tvar channel = this;\n\t\t$.ajax($.extend({\n\t\t\turl: this.basePath + url,\n\t\t\tcache: false,\n\t\t\tdataType: \"json\"\n\t\t}, options));\n\t},\n\t\n\tpoll: function() {\n\t\tif (this.pollingErrors > 2) {\n\t\t\t$(this).triggerHandler(\"connectionerror\");\n\t\t\treturn;\n\t\t}\n\t\tvar channel = this;\n\t\tthis.request(\"/recv\", {\n\t\t\tdata: {\n\t\t\t\tsince: this.lastMessageId,\n\t\t\t\tid: this.id\n\t\t\t},\n\t\t\tsuccess: function(data) {\n\t\t\t\tif (data) {\n\t\t\t\t\tchannel.handlePoll(data);\n\t\t\t\t} else {\n\t\t\t\t\tchannel.handlePollError();\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: this.handlePollError\n\t\t});\n\t},\n\t\n\thandlePoll: function(data) {\n\t\tthis.pollingErrors = 0;\n\t\tvar channel = this;\n\t\tif (data && data.messages) {\n\t\t\t$.each(data.messages, function(i, message) {\n\t\t\t\tchannel.lastMessageId = Math.max(channel.lastMessageId, message.id);\n\t\t\t\t$(channel).triggerHandler(message.type, message);\n\t\t\t});\n\t\t}\n\t\tthis.poll();\n\t},\n\t\n\thandlePollError: function() {\n\t\tthis.pollingErrors++;\n\t\tsetTimeout(this.poll, 10*1000);\n\t}\n});\n\n$.extend(Channel.prototype, {\n\tjoin: function(nick, options) {\n\t\tvar channel = this;\n\t\tthis.request(\"/join\", {\n\t\t\tdata: {\n\t\t\t\tnick: nick\n\t\t\t},\n\t\t\tsuccess: function(data) {\n\t\t\t\tif (!data) {\n\t\t\t\t\t(options.error || $.noop)();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tchannel.id = data.id;\n\t\t\t\tchannel.since = data.since;\n\t\t\t\tchannel.poll();\n\t\t\t\t\n\t\t\t\t(options.success || $.noop)();\n\t\t\t},\n\t\t\terror: options.error || $.noop\n\t\t});\n\t},\n\t\n\tpart: function() {\n\t\tif (!this.id) { return; }\n\t\tthis.request(\"/part\", {\n\t\t\tdata: { id: this.id }\n\t\t});\n\t},\n\t\n\tsend: function(msg) {\n\t\tif (!this.id) { return; }\n\t\t// TODO: use POST\n\t\tthis.request(\"/send\", {\n\t\t\tdata: {\n\t\t\t\tid: this.id,\n\t\t\t\ttext: msg\n\t\t\t}\n\t\t});\n\t},\n\t\n\twho: function() {\n\t\tif (!this.id) { return; }\n\t\tthis.request(\"/who\", {\n\t\t\tsuccess: function(data) {\n\t\t\t\tvar users = $(\"#users\");\n\t\t\t\t$.each(data.nicks, function(i, nick) {\n\t\t\t\t\tusers.append(\"<li>\" + nick + \"</li>\");\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n});\n\nfunction bind(fn, context) {\n\treturn function() {\n\t\treturn fn.apply(context, arguments);\n\t};\n}\nfunction bindAll(obj) {\n\tfor (var prop in obj) {\n\t\tif ($.isFunction(obj[prop])) {\n\t\t\tobj[prop] = bind(obj[prop], obj);\n\t\t}\n\t}\n}\n\n})(jQuery);\n"]],"start1":0,"start2":0,"length1":0,"length2":2422}]],"length":2422}
