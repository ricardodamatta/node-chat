{"ts":1372699174622,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"(function($) {\n\nvar title = document.title,\n\tcolors  = [\"green\", \"orange\", \"yellow\", \"red\", \"fuschia\", \"blue\"],\n\tchannel = nodeChat.connect(\"/chat\"),\n\tlog,\n\tmessage;\n\n// TODO: handle connectionerror\n\n$(function() {\n\tlog = $(\"#chat-log\");\n\tmessage = $(\"#message\");\n\t\n\t// Add a button that can be easily styled\n\t$(\"<a></a>\", {\n\t\tid: \"submit\",\n\t\ttext: \"Send\",\n\t\thref: \"#\",\n\t\tclick: function(event) {\n\t\t\tevent.preventDefault();\n\t\t\t$(this).closest(\"form\").submit();\n\t\t}\n\t})\n\t.appendTo(\"#entry fieldset\");\n\t\n\t// Add a message indicator when a nickname is clicked\n\t$(\"#users\").delegate(\"li\", \"click\", function() {\n\t\tmessage\n\t\t\t.val($(this).text() + \": \" + message.val())\n\t\t\t.focus();\n\t});\n});\n\n// new message posted to channel\n// - add to the chat log\n$(channel).bind(\"msg\", function(event, message) {\n\tvar time = formatTime(message.timestamp),\n\t\trow = $(\"<div></div>\")\n\t\t\t.addClass(\"chat-msg\");\n\t\n\t$(\"<span></span>\")\n\t\t.addClass(\"chat-time\")\n\t\t.text(time)\n\t\t.appendTo(row);\n\t\n\t$(\"<span></span>\")\n\t\t.addClass(\"chat-nick\")\n\t\t.text(message.nick)\n\t\t.appendTo(row);\n\t\n\t$(\"<span></span>\")\n\t\t.addClass(\"chat-text\")\n\t\t.text(message.text)\n\t\t.appendTo(row);\n\t\n\trow.appendTo(log);\n})\n// another user joined the channel\n// - add to the chat log\n.bind(\"join\", function(event, message) {\n\tvar time = formatTime(message.timestamp),\n\t\trow = $(\"<div></div>\")\n\t\t\t.addClass(\"chat-msg chat-system-msg\");\n\t\n\t$(\"<span></span>\")\n\t\t.addClass(\"chat-time\")\n\t\t.text(time)\n\t\t.appendTo(row);\n\t\n\t$(\"<span></span>\")\n\t\t.addClass(\"chat-nick\")\n\t\t.text(message.nick)\n\t\t.appendTo(row);\n\t\n\t$(\"<span></span>\")\n\t\t.addClass(\"chat-text\")\n\t\t.text(\"joined the room\")\n\t\t.appendTo(row);\n\t\n\trow.appendTo(log);\n})\n// another user joined the channel\n// - add to the user list\n.bind(\"join\", function(event, message) {\n\tvar added = false,\n\t\tnick  = $(\"<li></li>\", {\n\t\t\t\"class\": colors[0],\n\t\t\ttext: message.nick\n\t\t});\n\tcolors.push(colors.shift());\n\t$(\"#users > li\").each(function() {\n\t\tif (message.nick == this.innerHTML) {\n\t\t\tadded = true;\n\t\t\treturn false;\n\t\t}\n\t\tif (message.nick < this.innerHTML) {\n\t\t\tadded = true;\n\t\t\tnick.insertBefore(this);\n\t\t\treturn false;\n\t\t}\n\t});\n\tif (!added) {\n\t\t$(\"#users\").append(nick);\n\t}\n})\n// another user left the channel\n// - add to the chat log\n.bind(\"part\", function(event, message) {\n\tvar time = formatTime(message.timestamp),\n\t\trow = $(\"<div></div>\")\n\t\t\t.addClass(\"chat-msg chat-system-msg\");\n\t\n\t$(\"<span></span>\")\n\t\t.addClass(\"chat-time\")\n\t\t.text(time)\n\t\t.appendTo(row);\n\t\n\t$(\"<span></span>\")\n\t\t.addClass(\"chat-nick\")\n\t\t.text(message.nick)\n\t\t.appendTo(row);\n\t\n\t$(\"<span></span>\")\n\t\t.addClass(\"chat-text\")\n\t\t.text(\"left the room\")\n\t\t.appendTo(row);\n\t\n\trow.appendTo(log);\n})\n// another user left the channel\n// - remove from the user list\n.bind(\"part\", function(event, message) {\n\t$(\"#users > li\").each(function() {\n\t\tif (this.innerHTML == message.nick) {\n\t\t\t$(this).remove();\n\t\t\treturn false;\n\t\t}\n\t});\n})\n\n// Auto scroll list to bottom\n.bind(\"join part msg\", function() {\n\t// auto scroll if we're within 50 pixels of the bottom\n\tif (log.scrollTop() + 50 >= log[0].scrollHeight - log.height()) {\n\t\twindow.setTimeout(function() {\n\t\t\tlog.scrollTop(log[0].scrollHeight);\n\t\t}, 10);\n\t}\n});\n\n// handle login (choosing a nick)\n$(function() {\n\tfunction loginError(error) {\n\t\tlogin\n\t\t\t.addClass(\"error\")\n\t\t\t.find(\"label\")\n\t\t\t\t.text(error + \" Please choose another:\")\n\t\t\t.end()\n\t\t\t.find(\"input\")\n\t\t\t\t.focus();\n\t}\n\t\n\tvar login = $(\"#login\");\n\tlogin.submit(function() {\n\t\tvar nick = $.trim($(\"#nick\").val());\n\t\t\n\t\t// TODO: move the check into nodechat.js\n\t\tif (!nick.length || !/^[a-zA-Z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/.test(nick)) {\n\t\t\tloginError(\"Invalid Nickname.\");\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tchannel.join(nick, {\n\t\t\tsuccess: function() {\n\t\t\t\t$(\"body\")\n\t\t\t\t\t.removeClass(\"login\")\n\t\t\t\t\t.addClass(\"channel\");\n\t\t\t\tmessage.focus();\n\t\t\t},\n\t\t\terror: function() {\n\t\t\t\tloginError(\"Nickname in use.\");\n\t\t\t}\n\t\t});\n\t\t\n\t\treturn false;\n\t});\n\tlogin.find(\"input\").focus();\n});\n\n// handle sending a message\n$(function() {\n\t$(\"#channel form\").submit(function() {\n\t\tchannel.send(message.val());\n\t\tmessage.val(\"\").focus();\n\t\t\n\t\treturn false;\n\t});\n});\n\n// update the page title to show if there are unread messages\n$(function() {\n\tvar focused = true,\n\t\tunread = 0;\n\t\n\t$(window)\n\t\t.blur(function() {\n\t\t\tfocused = false;\n\t\t})\n\t\t.focus(function() {\n\t\t\tfocused = true;\n\t\t\tunread = 0;\n\t\t\tdocument.title = title;\n\t\t});\n\t\n\t$(channel).bind(\"msg\", function(event, message) {\n\t\tif (!focused) {\n\t\t\tunread++;\n\t\t\tdocument.title = \"(\" + unread + \") \" + title;\n\t\t}\n\t});\n});\n\n// notify the chat server that we're leaving if we close the window\n$(window).unload(function() {\n\tchannel.part();\n});\n\nfunction formatTime(timestamp) {\n\tvar date = new Date(timestamp),\n\t\thours = date.getHours(),\n\t\tminutes = date.getMinutes(),\n\t\tampm = \"AM\";\n\t\n\tif (hours > 12) {\n\t\thours -= 12;\n\t\tampm = \"PM\";\n\t}\n\t\n\tif (minutes < 10) {\n\t\tminutes = \"0\" + minutes;\n\t}\n\t\n\treturn hours + \":\" + minutes + \" \" + ampm;\n}\n\n})(jQuery);\n"]],"start1":0,"start2":0,"length1":0,"length2":4948}]],"length":4948}
